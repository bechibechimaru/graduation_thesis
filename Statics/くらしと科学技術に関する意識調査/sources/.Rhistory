# データをチェック
table(d$study)
# データを読み込む：d
d <- read.csv("gay (1).csv")
# データを読み込む：d
d <- read.csv("gay (1).csv")
# データを読み込む：d
d <- read.csv("gay(1).csv")
getwd()
cd()
# データを読み込む：d
d <- read.csv("gay(1).csv")
#| include: false
#| eval: false
## このスクリプトファイルがあるディレクトリ
dirhere <- dirname(rstudioapi::getActiveDocumentContext()$path)
## Quartoドキュメントがコンパイルするディレクトリをセット
knitr::opts_knit$set(root.dir = dirhere)
## ワーキングディレクトリをセット
setwd(dirhere)
#| include: false
## 使うパッケージ
## パッケージがない場合は install.packages("パッケージ名")でインストール
library(haven) # install.packages("haven") # SPSS/Stataファイルの読み込み
library(labelled) # install.packages("labelled") # 変数ラベルの管理
library(ggplot2) # install.packages("ggplot2") # グラフの作成・出力
library(gt) # install.packages("gt") # 変数の記述統計表の出力
library(texreg) # install.packages("texreg") # 回帰表の出力
#| include: false
## 限界効果の算出関数
genkaikoka <- function(mme, # 回帰モデルオブジェクト
setx, # 独立変数の名前
setm,　# 条件付け変数の名前
setmvals, # 結果を出力する条件付け変数の値
setmlabs = NULL) { # 条件付け変数の値ラベル
## 交差項変数の名前の抽出
setxsetm = paste(setx,setm,sep=":")
if (!setxsetm%in%rownames(vcov(mme))) setxsetm = paste(setm,setx,sep=":")
## 自由度の抽出
if ("df"%in%names(mme)) {
dfset <- mme$df[1]
# Assuming that df is the same across all.
# CAUTION: The above is not true if lm_robust's se_type="CR2".
} else {
dfset <- df.residual(mme)
}
## 係数と分散共分散マトリックスの抽出
cfset <- c(coef(mme)[which(names(coef(mme))==setx)],
coef(mme)[which(names(coef(mme))==setxsetm)])
vcset <- c(vcov(mme)[which(rownames(vcov(mme))==setx),
which(colnames(vcov(mme))==setx)],
vcov(mme)[which(rownames(vcov(mme))==setxsetm),
which(colnames(vcov(mme))==setxsetm)],
vcov(mme)[which(rownames(vcov(mme))==setx),
which(colnames(vcov(mme))==setxsetm)])
## 限界効果の算出
out = data.frame(m = setmvals,
est = cfset[1]+cfset[2]*setmvals,
se = sqrt(vcset[1]+setmvals^2*vcset[2]+2*setmvals*vcset[3]),
qt90 = qt(0.95,dfset),
qt95 = qt(0.975,dfset))
## 条件付け変数にラベル付与（ある場合のみ）
if (!is.null(setmlabs)) {
out$m <- factor(out$m, levels=setmvals, labels=setmlabs)
}
## 信頼区間の追加
out$lo90 = out$est-out$se*out$qt90
out$up90 = out$est+out$se*out$qt90
out$lo95 = out$est-out$se*out$qt95
out$up95 = out$est+out$se*out$qt95
## p値の追加
out$pval = (1 - pt(abs(out$est/out$se),dfset))*2
## 結果を返す
return(out)
}
#| include: false
## 使うパッケージ
## パッケージがない場合は install.packages("パッケージ名")でインストール
library(haven) # install.packages("haven") # SPSS/Stataファイルの読み込み
library(labelled) # install.packages("labelled") # 変数ラベルの管理
library(ggplot2) # install.packages("ggplot2") # グラフの作成・出力
library(gt) # install.packages("gt") # 変数の記述統計表の出力
library(texreg) # install.packages("texreg") # 回帰表の出力
#| include: false
## 使うパッケージ
## パッケージがない場合は install.packages("パッケージ名")でインストール
library(haven) # install.packages("haven") # SPSS/Stataファイルの読み込み
library(labelled) # install.packages("labelled") # 変数ラベルの管理
library(ggplot2) # install.packages("ggplot2") # グラフの作成・出力
library(gt) # install.packages("gt") # 変数の記述統計表の出力
library(texreg) # install.packages("texreg") # 回帰表の出力
View(genkaikoka)
genkaikoka <- function(mme, # 回帰モデルオブジェクト
setx, # 独立変数の名前
setm,　# 条件付け変数の名前
setmvals, # 結果を出力する条件付け変数の値
setmlabs = NULL) { # 条件付け変数の値ラベル
## 交差項変数の名前の抽出
setxsetm = paste(setx,setm,sep=":")
if (!setxsetm%in%rownames(vcov(mme))) setxsetm = paste(setm,setx,sep=":")
## 自由度の抽出
if ("df"%in%names(mme)) {
dfset <- mme$df[1]
# Assuming that df is the same across all.
# CAUTION: The above is not true if lm_robust's se_type="CR2".
} else {
dfset <- df.residual(mme)
}
## 係数と分散共分散マトリックスの抽出
cfset <- c(coef(mme)[which(names(coef(mme))==setx)],
coef(mme)[which(names(coef(mme))==setxsetm)])
vcset <- c(vcov(mme)[which(rownames(vcov(mme))==setx),
which(colnames(vcov(mme))==setx)],
vcov(mme)[which(rownames(vcov(mme))==setxsetm),
which(colnames(vcov(mme))==setxsetm)],
vcov(mme)[which(rownames(vcov(mme))==setx),
which(colnames(vcov(mme))==setxsetm)])
## 限界効果の算出
out = data.frame(m = setmvals,
est = cfset[1]+cfset[2]*setmvals,
se = sqrt(vcset[1]+setmvals^2*vcset[2]+2*setmvals*vcset[3]),
qt90 = qt(0.95,dfset),
qt95 = qt(0.975,dfset))
## 条件付け変数にラベル付与（ある場合のみ）
if (!is.null(setmlabs)) {
out$m <- factor(out$m, levels=setmvals, labels=setmlabs)
}
## 信頼区間の追加
out$lo90 = out$est-out$se*out$qt90
out$up90 = out$est+out$se*out$qt90
out$lo95 = out$est-out$se*out$qt95
out$up95 = out$est+out$se*out$qt95
## p値の追加
out$pval = (1 - pt(abs(out$est/out$se),dfset))*2
## 結果を返す
return(out)
}
#| include: true # ブロック自体はincludeされないという形式になる
#| eval: false
## このスクリプトファイルがあるディレクトリ
dirhere <- dirname(rstudioapi::getActiveDocumentContext()$path)
## Quartoドキュメントがコンパイルするディレクトリをセット
knitr::opts_knit$set(root.dir = dirhere)
## ワーキングディレクトリをセット
setwd(dirhere)
#| include: true # ブロック自体はincludeされないという形式になる
#| eval: false
## このスクリプトファイルがあるディレクトリ
dirhere <- dirname(rstudioapi::getActiveDocumentContext()$path)
## Quartoドキュメントがコンパイルするディレクトリをセット
knitr::opts_knit$set(root.dir = dirhere)
## ワーキングディレクトリをセット
setwd(dirhere)
setwd("/Users/karubeshougo/Uni/seminar/graduation_thesis/graduation_thess/Statics/くらしと科学技術に関する意識調査/sources")
ra_data = read.csv("RawData_OpinionPoll_STIpolicy.csv", fileEncoding = "UTF-8")
